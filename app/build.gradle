plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.example.mvpchatapplication'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.mvpchatapplication"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    def localPropertiesFile = rootProject.file("local.properties")
    def localProperties = new Properties()
    localProperties.load(new FileInputStream(localPropertiesFile))
    def supabaseUrl = localProperties.getProperty("SUPABASE_URL")
    def supabasekey = localProperties.getProperty("SUPABASE_KEY")

    buildTypes {
        debug {
            buildConfigField "String", "SUPABASE_URL", "\"$supabaseUrl\""
            buildConfigField "String", "SUPABASE_KEY", "\"$supabasekey\""
        }
        release {
            buildConfigField "String", "SUPABASE_URL", "\"$supabaseUrl\""
            buildConfigField "String", "SUPABASE_KEY", "\"$supabasekey\""
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        buildConfig = true
        viewBinding = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.1"
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation "com.google.dagger:hilt-android:2.47"
    kapt "com.google.dagger:hilt-compiler:2.47"
    implementation platform("io.github.jan-tennert.supabase:bom:1.3.0")
    implementation 'io.github.jan-tennert.supabase:gotrue-kt'
    implementation 'io.github.jan-tennert.supabase:postgrest-kt'
    implementation 'io.github.jan-tennert.supabase:realtime-kt'
    implementation 'io.github.jan-tennert.supabase:storage-kt'
    def ktor_version = "2.3.2"
    implementation "io.ktor:ktor-client-cio:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-utils:$ktor_version"

    def camerax_version = "1.3.0-beta01"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX VideoCapture library
    implementation "androidx.camera:camera-video:${camerax_version}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:${camerax_version}"
    // If you want to additionally use the CameraX Extensions library
    implementation "androidx.camera:camera-extensions:${camerax_version}"
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    def paging_version = "3.2.0"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    def lifecycle_version = "2.6.1"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
}